name: Openwrt Build Bot for 22.03
on:
  workflow_dispatch:
  push:
    branches: main
    paths:
      - '**'
      - '!README.md'
      - '!.gitignore'
      - '!.github/workflows/build-release-21.02.yml'
      - '!.github/workflows/build-snapshot.yml'
      - '!.github/workflows/build-immortalwrt-snapshot.yml'
      - '!~/fetch.sh'
      - '!~/build.sh'

  schedule:
  - cron: 0 17 * * 5

jobs:
  buildpkg:
    name: Build Openwrt Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - x86_64-22.03.3

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Prepare feeds
        run: |
          chmod +x fetch.sh && ./fetch.sh

      - name: Build 
        uses: openwrt/gh-action-sdk@v5.4
        env:
          ARCH: ${{ matrix.arch }}
          KEY_BUILD: ${{ secrets.KEY_BUILD }}
          INDEX: 0
          IGNORE_ERRORS: 1
          PACKAGES: |
            alist
            airconnect
            internet-detector
            luci-lib-ipkg
            mosdns
            v2dat
            homebox
            oaf
            open-app-filter
            smartdns
            socat
            wrtbwmon
            brook
            chinadns-ng
            dns2socks
            dns2tcp
            dnsforwarder
            hysteria
            ipt2socks
            kcptun
            lua-maxminddb
            lua-neturl
            microsocks
            msd_lite
            naiveproxy
            node-request
            pdnsd-alt
            redsock2
            shadowsocks-rust
            shadowsocksr-libev
            fast-classifier
            shortcut-fe
            simulated-driver
            simple-obfs
            sing-box
            ssocks
            tcping
            trojan-go
            trojan-plus
            trojan
            v2ray-core
            v2ray-geodata
            v2ray-plugin
            vsftpd-alt
            xray-core
            xray-plugin
            luci-app-advanced
            luci-app-airconnect
            luci-app-alist
            luci-app-argon-config
            luci-app-autotimeset
            luci-app-bypass
            luci-app-cloudflarespeedtest
            luci-app-control-speedlimit
            luci-app-control-timewol
            luci-app-control-webrestriction
            luci-app-control-weburl
            luci-app-diskman
            luci-app-fileassistant
            luci-app-internet-detector
            luci-app-mosdns
            luci-app-msd_lite
            luci-app-netspeedtest
            luci-app-oaf
            luci-app-onliner
            luci-app-openvpn-server
            luci-app-parentcontrol
            luci-app-passwall
            luci-app-passwall2
            luci-app-pushbot
            luci-app-smartdns
            luci-app-socat
            luci-app-ssr-plus
            luci-app-tn-netports
            luci-app-temp-status
            luci-app-turboacc
            luci-app-unblockneteasemusic
            luci-app-usb-printer
            luci-app-vsftpd
            luci-app-vssr
            luci-app-wizard
            luci-app-wrtbwmon
            luci-app-zerotier
            luci-theme-argon

      - name: List files
        run: |
          ls -R bin/

      - name: Upload
        env:
          ARCH: ${{ matrix.arch }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          BRANCH="packages/${ARCH::-2}"
          if [[ $ARCH =~ "snapshot" ]]; then
              BRANCH="packages/$ARCH"
          fi
          cd bin/packages/*/action
          sudo chown runner:runner -R .
          git init
          git config user.name "bot"
          git config user.email "bot@github.com"
          git add .
          git commit -m "$(TZ='Asia/Shanghai' date +@%Y%m%d)"
          git push --force --quiet "https://$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY" HEAD:$BRANCH
